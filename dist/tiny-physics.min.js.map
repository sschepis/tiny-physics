{
  "version": 3,
  "sources": ["../src/2d-3d.js", "../src/index.js"],
  "sourcesContent": ["export class Vector3 {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    add(v) { return new Vector3(this.x + v.x, this.y + v.y, this.z + v.z); }\n    sub(v) { return new Vector3(this.x - v.x, this.y - v.y, this.z - v.z); }\n    mul(s) { return new Vector3(this.x * s, this.y * s, this.z * s); }\n    div(s) { return new Vector3(this.x / s, this.y / s, this.z / s); }\n    mag() { return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z); }\n    norm() { return this.div(this.mag()); }\n    dot(v) { return this.x * v.x + this.y * v.y + this.z * v.z; }\n    static add(v1, v2) { return v1.add(v2); }\n    static sub(v1, v2) { return v1.sub(v2); }\n    static mul(v, s) { return v.mul(s); }\n    static div(v, s) { return v.div(s); }\n    static mag(v) { return v.mag(); }\n    static norm(v) { return v.norm(); }\n    static dot(v1, v2) { return v1.dot(v2); }\n\n    distance(v) { return Vector3.sub(this, v).mag(); }\n    static distance(v1, v2) { return Vector3.sub(v1, v2).mag(); }\n    static cross(v1, v2) { return new Vector3(v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x); }\n    static angle(v1, v2) { return Math.acos(Vector3.dot(v1, v2) / (v1.mag() * v2.mag())); }\n    static angleBetween(v1, v2) { return Math.atan2(v2.y - v1.y, v2.x - v1.x); }\n    static angleBetween3(v1, v2) { return Math.atan2(v2.y - v1.y, v2.x - v1.x); }\n}\nexport class Vector2 {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    add(v) { return new Vector2(this.x + v.x, this.y + v.y); }\n    sub(v) { return new Vector2(this.x - v.x, this.y - v.y); }\n    mul(s) { return new Vector2(this.x * s, this.y * s); }\n    div(s) { return new Vector2(this.x / s, this.y / s); }\n    mag() { return Math.sqrt(this.x * this.x + this.y * this.y); }\n    norm() { return this.div(this.mag()); }\n    dot(v) { return this.x * v.x + this.y * v.y; }\n    static add(v1, v2) { return v1.add(v2); }\n    static sub(v1, v2) { return v1.sub(v2); }\n    static mul(v, s) { return v.mul(s); }\n    static div(v, s) { return v.div(s); }\n    static mag(v) { return v.mag(); }\n    static norm(v) { return v.norm(); }\n    static dot(v1, v2) { return v1.dot(v2); }\n\n    distance(v) { return Vector2.sub(this, v).mag(); }\n    static distance(v1, v2) { return Vector2.sub(v1, v2).mag(); }\n    static cross(v1, v2) { return v1.x * v2.y - v1.y * v2.x; }\n    static angle(v1, v2) { return Math.acos(Vector2.dot(v1, v2) / (v1.mag() * v2.mag())); }\n    static angleBetween(v1, v2) { return Math.atan2(v2.y - v1.y, v2.x - v1.x); }\n}\nexport class DMesh {\n    constructor(world, vertices, indices, normals, uvs) {\n        this.world = world;\n        this.vertices = vertices;\n        this.indices = indices;\n        this.normals = normals;\n        this.uvs = uvs;\n    }\n}\nexport class DObject extends PhysicsObject {\n    constructor(world, mesh, opts) {\n        super(world, opts);\n        this.mesh = mesh;\n        this.opts = opts;\n        this.x = opts.x || 0;\n        this.y = opts.y || 0;\n        this.z = opts.z || 0;\n        this.rx = opts.rx || 0;\n        this.ry = opts.ry || 0;\n        this.rz = opts.rz || 0;\n        this.sx = opts.sx || 1;\n        this.sy = opts.sy || 1;\n        this.sz = opts.sz || 1;\n    }\n    update(others) {\n        // do nothing\n    }\n    draw(ctx, camera) {\n        // draw the mesh\n        ctx.beginPath();\n        for (let i = 0; i < this.mesh.indices.length; i += 3) {\n            const i1 = this.mesh.indices[i];\n            const i2 = this.mesh.indices[i + 1];\n            const i3 = this.mesh.indices[i + 2];\n            const v1 = this.mesh.vertices[i1];\n            const v2 = this.mesh.vertices[i2];\n            const v3 = this.mesh.vertices[i3];\n            const p1 = camera.project(v1.x, v1.y, v1.z);\n            const p2 = camera.project(v2.x, v2.y, v2.z);\n            const p3 = camera.project(v3.x, v3.y, v3.z);\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.lineTo(p3.x, p3.y);\n            ctx.lineTo(p1.x, p1.y);\n        }\n        ctx.stroke();\n    }\n}\n\nexport class DScene {\n    constructor(world, objects) {\n        this.world = world;\n        this.objects = objects || [];\n    }\n    addObject(obj) {\n        this.objects.push(obj);\n    }\n    update() {\n        for (let obj of this.objects) {\n            obj.update(this.objects);\n        }\n    }\n}\n\nexport class DCamera {\n    constructor(opts) {\n        this.opts = opts;\n        this.x = opts.x || 0;\n        this.y = opts.y || 0;\n        this.z = opts.z || 0;\n        this.rx = opts.rx || 0;\n        this.ry = opts.ry || 0;\n        this.rz = opts.rz || 0;\n    }\n    project(x, y, z) {\n        const rx = this.rx * Math.PI / 180;\n        const ry = this.ry * Math.PI / 180;\n        const rz = this.rz * Math.PI / 180;\n        const cos = Math.cos;\n        const sin = Math.sin;\n        const tx = x - this.x;\n        const ty = y - this.y;\n        const tz = z - this.z;\n        const x1 = tx;\n        const y1 = ty * cos(rx) - tz * sin(rx);\n        const z1 = ty * sin(rx) + tz * cos(rx);\n        const x2 = x1 * cos(ry) + z1 * sin(ry);\n        const y2 = y1;\n        const z2 = -x1 * sin(ry) + z1 * cos(ry);\n        const x3 = x2 * cos(rz) - y2 * sin(rz);\n        const y3 = x2 * sin(rz) + y2 * cos(rz);\n        const z3 = z2;\n        return {\n            x: x3,\n            y: y3,\n            z: z3\n        };\n    }\n}\n\nexport class DWorld extends PhysicsEngine {\n    scenes = {};\n    curScene = 'default';\n    constructor() {\n        super();\n        this.scenes[this.curScene] = new DScene(this);\n        this.camera = new DCamera({});\n    }\n    update() {\n        super.update();\n        this.scenes[this.curScene].update();\n    }\n    draw(ctx) {\n        this.scenes[this.curScene].objects.forEach(obj => obj.draw(ctx, this.camera));\n    }\n    addScene(name, scene) {\n        this.scenes[name] = scene;\n    }\n    getScene(name) {\n        return this.scenes[name];\n    }\n    setScene(name) {\n        this.curScene = name;\n    }\n\n    animate(ctx) {\n        this.update();\n        this.draw(ctx);\n        requestAnimationFrame(() => this.animate(ctx));\n    }\n}\n\nif(!window.Physics) {\n    window.Physics = {};\n}\nwindow.Physics.DWorld = DWorld;\nwindow.Physics.DObject = DObject;\nwindow.Physics.DScene = DScene;\nwindow.Physics.DCamera = DCamera;\nwindow.Physics.DMesh = DMesh;\nwindow.Physics.Vector2 = Vector2;\nwindow.Physics.Vector3 = Vector3;\n", "import './2d-3d';\n\nclass PhysicsObject {\n    engine;\n    opts;\n    constructor(engine, opts) {\n        this.engine = engine;\n        this.opts = opts;\n        this.x = opts.x || 0\n        this.y = opts.y || 0\n        this.vx = opts.vx || 0\n        this.vy = opts.vy || 0\n        this.ax = opts.ax || 0\n        this.ay = opts.ay || 0 \n    }\n    update(others) {\n        this.vx += this.ax;\n        this.vy += this.ay;\n        this.x += this.vx;\n        this.y += this.vy;\n        this.ax = 0;\n        this.ay = 0;\n    }\n    draw(ctx) {\n        ctx.fillRect(this.x, this.y, 10, 10);\n    }\n}\nclass SolidObject extends PhysicsObject {\n    constructor(engine, opts) {\n        super(engine, opts);\n        this.width = opts.width || 20\n        this.height = opts.height || 20\n        this.onSurface = false;\n    }\n    update(others) {\n        super.update(others);\n        if (this.y + 2 * this.height > 440) {\n            this.vy = 0;\n            this.onGround = true;\n        }\n    }\n}\nclass StaticObject extends PhysicsObject {\n    constructor(engine, opts) {\n        super(engine, opts);\n        this.width = opts.width || 100;\n        this.height = opts.height || 10;\n    }\n    draw(ctx) {\n        ctx.fillRect(this.x, this.y, this.width, this.height);\n    }\n    update(others) {\n        // do nothing except override the default update method.\n        // this makes the platform static.\n    }\n}\nclass PhysicsForce {\n    constructor(engine, opts) { this.engine = engine; this.opts = opts; }\n    apply(obj1, obj2) {}\n    render(ctx) {}\n}\nclass PhysicsEngine {\n    constructor(opts) {\n        opts = opts || {};\n        this.gravity = 98;\n        this.drag = 0.0000;\n        this.forces = opts.forces || [];\n        this.objects = opts.objects || [];\n        if(opts.animate && opts.animateCallback) {\n            this.animate(this.objects, opts.animateCallback.bind(this));\n        }\n    }\n    static createObject(type, opts) {\n        return new type(this, opts);\n    }\n    static createForce(opts) {\n        return new PhysicsForce(this, opts);\n    }\n    animate(objects, onUpdate) {\n        this.onUpdate = onUpdate;\n        this.objects = objects || this.objects;\n        this.lastTime = Date.now();\n        this.tick();\n    }\n    update(delta, objects) {\n        if (!objects) objects = this.objects || [];\n        for (let i = 0; i < objects.length; i++) {\n            const obj = objects[i];\n            if (obj.update) obj.update(objects);\n            for (let k = 0; k < this.forces.length; k++) {\n                this.forces[k].apply(obj, objects, delta);\n            }\n            if(this.opts.wrap) this.wrapBounds(obj, { x: 0, y: 0, width: 640, height: 480 });\n        }\n    }\n    wrapBounds(obj, bounds) {\n        if (obj.x > bounds.x + bounds.width) obj.x = bounds.x;\n        if (obj.x < bounds.x) obj.x = bounds.x + bounds.width;\n        if (obj.y > bounds.y + bounds.height) obj.y = bounds.y;\n        if (obj.y < bounds.y) obj.y = bounds.y + bounds.height;\n    }\n    tick() {\n        const now = Date.now();\n        const delta = (now - this.lastTime) / 1000;\n        this.lastTime = now;\n        this.update(delta, this.objects);\n        if (this.onUpdate) {\n            this.onUpdate(this.objects);\n            setTimeout(() => requestAnimationFrame(this.tick.bind(this)), 10)\n        }\n    }\n}\n\nif(!window.Physics) {\n    window.Physics = {};\n}\n\nwindow.Physics = {\n    Engine: PhysicsEngine,\n    SolidObject: SolidObject,\n    StaticObject: StaticObject,\n    Force: PhysicsForce\n};"],
  "mappings": "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",
  "names": ["Vector3", "x", "y", "z", "v", "s", "v1", "v2", "Vector2", "DMesh", "world", "vertices", "indices", "normals", "uvs", "DObject", "mesh", "opts", "others", "ctx", "camera", "i1", "i2", "i3", "v3", "p1", "p2", "p3", "DScene", "objects", "obj", "DCamera", "rx", "ry", "rz", "cos", "sin", "tx", "ty", "tz", "x1", "y1", "z1", "x2", "y2", "z2", "x3", "y3", "DWorld", "name", "scene", "PhysicsObject", "engine", "opts", "others", "ctx", "SolidObject", "StaticObject", "PhysicsForce", "obj1", "obj2", "PhysicsEngine", "type", "objects", "onUpdate", "delta", "obj", "k", "bounds", "now"]
}
